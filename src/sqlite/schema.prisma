generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch", "referentialIntegrity", "relationJoins"]
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./northwind.db"
}

model Customer {
  id           Int     @id @default(autoincrement())
  companyName  String  @map("company_name")
  contactName  String  @map("contact_name")
  contactTitle String  @map("contact_title")
  address      String
  city         String
  postalCode   String? @map("postal_code")
  region       String?
  country      String
  phone        String
  fax          String?
  orders       Order[]

  @@map("customers")
}

model Employee {
  id              Int      @id @default(autoincrement())
  lastName        String   @map("last_name")
  firstName       String?  @map("first_name")
  title           String
  titleOfCourtesy String   @map("title_of_courtesy")
  birthDate       DateTime @map("birth_date")
  hireDate        DateTime @map("hire_date")
  address         String
  city            String
  postalCode      String   @map("postal_code")
  country         String
  homePhone       String   @map("home_phone")
  extension       Int
  notes           String
  recipientId     Int?     @map("recipient_id")

  recipient Employee?  @relation("reports", fields: [recipientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reporters Employee[] @relation("reports")
  orders    Order[]

  @@index([recipientId], map: "recepient_idx")
  @@map("employees")
}

model Detail {
  unitPrice Float   @map("unit_price")
  quantity  Int
  discount  Float
  orderId   Int     @map("order_id")
  productId Int     @map("product_id")
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([orderId, productId])
  @@index([productId], map: "product_id_idx")
  @@index([orderId], map: "order_id_idx")
  @@map("order_details")
}

model Order {
  id             Int       @id @default(autoincrement())
  orderDate      DateTime  @map("order_date")
  requiredDate   DateTime  @map("required_date")
  shippedDate    DateTime? @map("shipped_date")
  shipVia        Int       @map("ship_via")
  freight        Float
  shipName       String    @map("ship_name")
  shipCity       String    @map("ship_city")
  shipRegion     String?   @map("ship_region")
  shipPostalCode String?   @map("ship_postal_code")
  shipCountry    String    @map("ship_country")
  customerId     Int       @map("customer_id")
  employeeId     Int       @map("employee_id")
  details        Detail[]
  employee       Employee  @relation(fields: [employeeId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  customer       Customer  @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("orders")
}

model Product {
  id              Int      @id @default(autoincrement())
  name            String
  quantityPerUnit String   @map("qt_per_unit")
  unitPrice       Float    @map("unit_price")
  unitsInStock    Int      @map("units_in_stock")
  unitsOnOrder    Int      @map("units_on_order")
  reorderLevel    Int      @map("reorder_level")
  discontinued    Int
  supplierId      Int      @map("supplier_id")
  details         Detail[]
  supplier        Supplier @relation(fields: [supplierId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([supplierId], map: "supplier_idx")
  @@map("products")
}

model Supplier {
  id           Int       @id @default(autoincrement())
  companyName  String    @map("company_name")
  contactName  String    @map("contact_name")
  contactTitle String    @map("contact_title")
  address      String
  city         String
  region       String?
  postalCode   String    @map("postal_code")
  country      String
  phone        String
  products     Product[]

  @@map("suppliers")
}
